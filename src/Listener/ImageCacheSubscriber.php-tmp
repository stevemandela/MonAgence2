
Deprecated: The each() function is deprecated. This message will be suppressed on further calls in C:\Users\Lenovo\AppData\Roaming\Sublime Text 3\Packages\PHPTools\php.tools\codeFormatter.php on line 54
<?php
namespace App\Listener;

use App\Entity\Property;
use Doctrine\Common\EventSubscriber;
use Doctrine\Common\Persistence\Event\LifecycleEventArgs;

use Doctrine\ORM\Event\PreUpdateEventArgs;
use Liip\ImagineBundle\Imagine\Cache\CacheManager;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Vich\UploaderBundle\Templating\Helper\UploaderHelper;

class ImageCacheSubscriber implements EventSubscriber {
	/**
	 * @var CacheManager
	 */
	private $cacheManager;

	/**
	 * @var UploaderHelper
	 */
	private $uploaderHelper;

	public function __construct(CacheManager $cacheManager, UploaderHelper $uploaderHelper) {
		$this->cacheManager   = $cacheManager;
		$this->uploaderHelper = $uploaderHelper;

	}

	public function getSubscribedEvents() {
		return [
			'preRemove',
			'preUpdate'
		];

	}

	public function preRemove(LifecycleEventArgs $args) {

		$entity = $args->getEntity();
		if (!$entity instanceof Property) {
			return;

		}

		$this->cacheManager->remove($this->uploaderHelper->asset($entity, 'imageFile'));

	}

	public function preUpdate(PreUpdateEventArgs $args) {

		$entity = $args->getEntity();
		if (!$entity instanceof Property) {
			return;

		}
		if ($entity->getImageFile() instanceof UploadedFile) {
			$this->cacheManager->remove($this->uploaderHelper->asset($entity, 'imageFile'));

		}
	}
}